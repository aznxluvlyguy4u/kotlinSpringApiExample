{
	"info": {
		"_postman_id": "b8a9e8f3-17a8-4c7d-b60d-512c6e0d5771",
		"name": "Ocean Premum - API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CurrentRMS - REST API",
			"item": [
				{
					"name": "Find Product by Product ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products/19",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products",
								"19"
							]
						},
						"description": "Find product by ID"
					},
					"response": []
				},
				{
					"name": "Find All Product Groups",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/product_groups",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"product_groups"
							]
						},
						"description": "Get a list of all configured product groups and their id's"
					},
					"response": []
				},
				{
					"name": "Find Products based on mixed query params",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products?product_group_id_eq=22&tags=[\"Fins\"]",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "product_group_id_eq",
									"value": "22"
								},
								{
									"key": "tags",
									"value": "[\"Fins\"]"
								}
							]
						},
						"description": "In this case \n\nproducts that belong to product group id = 22\n\nAND\n\nhas the tag \"Fins\"\n"
					},
					"response": []
				},
				{
					"name": "Find Products by Product Group ONLY (option 1: by name string)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products?q[product_group_name_cont]=Fun_Activities",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "q[product_group_name_cont]",
									"value": "Fun_Activities"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Products by Product Group ONLY (option 2: by product group ID)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products?q[product_group_id_eq]=19",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "q[product_group_id_eq]",
									"value": "19"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Products By Tag ONLY",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"type": "text",
								"value": "{{op-domain}}"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{op-token}}"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products?tags=[\"sierra\"]",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "tags",
									"value": "[\"sierra\"]"
								}
							]
						},
						"description": "In this case all products with the tag called 'Sierra'"
					},
					"response": []
				},
				{
					"name": "Find Products By [Name OR ProductGroup name OR Tag]",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"type": "text",
								"value": "{{op-domain}}"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{op-token}}"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products?page=1&per_page=2&q[name_or_product_group_name_or_product_tags_name_cont]=seabob",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "per_page",
									"value": "2"
								},
								{
									"key": "q[name_or_product_group_name_or_product_tags_name_cont]",
									"value": "seabob"
								}
							]
						},
						"description": "page (number, optional) 1   \nThe requested page number\n\nper_page (number, optional) 20  \nThe number of records to return for the requested page\n\nfiltermode (string, optional)   all \nA built in filtermode name (e.g. active, inactive, all)\n\nq[name_or_product_group_name_or_tags_name_cont] (string, optional)  search_text_here    \nSearch on name, product group name or tags for matching records"
					},
					"response": []
				},
				{
					"name": "stores",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/stores",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"stores"
							]
						}
					},
					"response": []
				},
				{
					"name": "products filter by tag",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"type": "text",
								"value": "{{op-domain}}"
							},
							{
								"key": "X-AUTH-TOKEN",
								"type": "text",
								"value": "{{op-token}}"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products?q[tag]=highlighted",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "q[tag]",
									"value": "highlighted"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find product by Inventory with dates and store id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products/inventory?starts_at=2018-09-04&ends_at=2018-09-15&filtermode[]=rental&store_id=1&q[name_or_product_group_name_or_product_tags_name_cont]=seabob",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products",
								"inventory"
							],
							"query": [
								{
									"key": "starts_at",
									"value": "2018-09-04"
								},
								{
									"key": "ends_at",
									"value": "2018-09-15"
								},
								{
									"key": "filtermode[]",
									"value": "rental"
								},
								{
									"key": "store_id",
									"value": "1"
								},
								{
									"key": "q[name_or_product_group_name_or_product_tags_name_cont]",
									"value": "seabob"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find product by inventory by [TAGS ONLY] with dates and store id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products/inventory?starts_at=2018-09-04&ends_at=2018-09-15&filtermode[]=rental&store_id=1&q[product_tags_name_cont]=tiwal%20sail",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products",
								"inventory"
							],
							"query": [
								{
									"key": "starts_at",
									"value": "2018-09-04"
								},
								{
									"key": "ends_at",
									"value": "2018-09-15"
								},
								{
									"key": "filtermode[]",
									"value": "rental"
								},
								{
									"key": "store_id",
									"value": "1"
								},
								{
									"key": "q[product_tags_name_cont]",
									"value": "tiwal%20sail"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find product by inventory EXCLUDE those of product group Accessories",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-SUBDOMAIN",
								"value": "{{op-domain}}",
								"type": "text"
							},
							{
								"key": "X-AUTH-TOKEN",
								"value": "{{op-token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.current-rms.com/api/v1/products/inventory?store_id=13&q[product_tags_name_matches]=F5&starts_at=2019-06-04&ends_at=2019-06-15&q[product_accessory_only_eq]=false",
							"protocol": "https",
							"host": [
								"api",
								"current-rms",
								"com"
							],
							"path": [
								"api",
								"v1",
								"products",
								"inventory"
							],
							"query": [
								{
									"key": "store_id",
									"value": "13"
								},
								{
									"key": "q[product_tags_name_matches]",
									"value": "F5"
								},
								{
									"key": "starts_at",
									"value": "2019-06-04"
								},
								{
									"key": "ends_at",
									"value": "2019-06-15"
								},
								{
									"key": "q[product_accessory_only_eq]",
									"value": "false"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "https://api.current-rms.com/doc#header-api-endpoint",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "ecbd385b-5969-45ec-aab1-e7d0f5b90376",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5412ff12-530a-42ee-8c92-66f616a8671d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "OP - REST API",
			"item": [
				{
					"name": "auth",
					"item": [
						{
							"name": "local",
							"item": [
								{
									"name": "authenticate",
									"request": {
										"auth": {
											"type": "basic",
											"basic": [
												{
													"key": "password",
													"value": "doe",
													"type": "string"
												},
												{
													"key": "username",
													"value": "jane",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"firstName\": \"foobar\",\n\t\"lastName\": \"adadad\",\n\t\"dateOfBirth\": \"2001-01-01\",\n\t\"emailAddress\":  \"foobar@example.com\",\n\t\"landLinePhoneNumber\": \"123131\",\n\t\"cellPhoneNumber\": \"123123123\",\n\t\"password\": \"foobar\"\n}"
										},
										"url": {
											"raw": "http://localhost:8080/api/v1/auth",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "docs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "http://localhost:8080/api/v1/auth/docs",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"auth",
												"docs"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "dev",
							"item": [
								{
									"name": "authenticate",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"name\": \"Jane Doe\",\n\t\"emailAddress\": \"jane-doe@example.com\"\n}"
										},
										"url": {
											"raw": "https://vk2b3q5m17.execute-api.eu-west-1.amazonaws.com/dev/api/v1/auth",
											"protocol": "https",
											"host": [
												"vk2b3q5m17",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "docs",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://lbaoy0bpmf.execute-api.eu-west-1.amazonaws.com/dev/api/v1/auth/docs",
											"protocol": "https",
											"host": [
												"lbaoy0bpmf",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"auth",
												"docs"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "users",
					"item": [
						{
							"name": "Register user - extended - presenter Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"firstName\":\"Jane\",\n\t\"lastName\":\"Doe\",\n\t\"dateOfBirth\":\"2001-01-01\",\n\t\"emailAddress\":\"jane-doe@jongensvantechniek.nl\"\n}"
								},
								"url": {
									"raw": "http://localhost:8080/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register user",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:8080/api/v1/users/docs",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"v1",
										"users",
										"docs"
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "test",
					"item": [
						{
							"name": "Find All Products",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products",
									"protocol": "https",
									"host": [
										"1qie0vagy1",
										"execute-api",
										"eu-west-1",
										"amazonaws",
										"com"
									],
									"path": [
										"dev",
										"api",
										"v1",
										"products"
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Products based on mixed query params",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f816c1c9-4046-461a-974f-0911f042d1c4",
										"exec": [
											"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
											"    pm.response.to.have.jsonBody('code');",
											"    pm.response.to.have.jsonBody('data');",
											"    pm.response.to.have.jsonBody('meta');",
											"    ",
											"    pm.response.to.not.have.jsonBody('error');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?product_group_id_eq=22&tags=[\"Fins\"]",
									"protocol": "https",
									"host": [
										"1qie0vagy1",
										"execute-api",
										"eu-west-1",
										"amazonaws",
										"com"
									],
									"path": [
										"dev",
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "product_group_id_eq",
											"value": "22"
										},
										{
											"key": "tags",
											"value": "[\"Fins\"]"
										}
									]
								},
								"description": "In this case \n\nproducts that belong to product group id = 22\n\nAND\n\nhas the tag \"Fins\"\n"
							},
							"response": []
						},
						{
							"name": "Find Products by Product Group ONLY (option 1: by name string)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "60282a34-b410-4c10-84c0-47f457b17956",
										"exec": [
											"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
											"    pm.response.to.have.jsonBody('code');",
											"    pm.response.to.have.jsonBody('data');",
											"    pm.response.to.have.jsonBody('meta');",
											"    ",
											"    pm.response.to.not.have.jsonBody('error');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?q[product_group_name_cont]=Fun_Activities",
									"protocol": "https",
									"host": [
										"1qie0vagy1",
										"execute-api",
										"eu-west-1",
										"amazonaws",
										"com"
									],
									"path": [
										"dev",
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "q[product_group_name_cont]",
											"value": "Fun_Activities"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Find Products By Tag ONLY",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2913478-3fe2-4754-9b38-9d3c2c9d278d",
										"exec": [
											"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
											"    pm.response.to.have.jsonBody('code');",
											"    pm.response.to.have.jsonBody('data');",
											"    pm.response.to.have.jsonBody('meta');",
											"    ",
											"    pm.response.to.not.have.jsonBody('error');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?tags=[\"sierra\"]",
									"protocol": "https",
									"host": [
										"1qie0vagy1",
										"execute-api",
										"eu-west-1",
										"amazonaws",
										"com"
									],
									"path": [
										"dev",
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "tags",
											"value": "[\"sierra\"]"
										}
									]
								},
								"description": "In this case all products with the tag called 'Sierra'"
							},
							"response": []
						},
						{
							"name": "Find Products By [Name OR ProductGroup name OR Tag]",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7a6adba7-1f51-40ba-b24f-41214b8bb5ea",
										"exec": [
											"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
											"    pm.response.to.have.jsonBody('code');",
											"    pm.response.to.have.jsonBody('data');",
											"    pm.response.to.have.jsonBody('meta');",
											"    ",
											"    pm.response.to.not.have.jsonBody('error');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?page=1&per_page=2&q[name_or_product_group_name_or_product_tags_name_cont]=seabob",
									"protocol": "https",
									"host": [
										"1qie0vagy1",
										"execute-api",
										"eu-west-1",
										"amazonaws",
										"com"
									],
									"path": [
										"dev",
										"api",
										"v1",
										"products"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "per_page",
											"value": "2"
										},
										{
											"key": "q[name_or_product_group_name_or_product_tags_name_cont]",
											"value": "seabob"
										}
									]
								},
								"description": "page (number, optional) 1   \nThe requested page number\n\nper_page (number, optional) 20  \nThe number of records to return for the requested page\n\nfiltermode (string, optional)   all \nA built in filtermode name (e.g. active, inactive, all)\n\nq[name_or_product_group_name_or_tags_name_cont] (string, optional)  search_text_here    \nSearch on name, product group name or tags for matching records"
							},
							"response": []
						},
						{
							"name": "Find product by inventory EXCLUDE those of product group Accessories Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a7b77b2-74e0-4219-b5d7-aae49ce8de9c",
										"exec": [
											"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
											"    pm.response.to.have.jsonBody('code');",
											"    pm.response.to.have.jsonBody('data');",
											"    pm.response.to.have.jsonBody('meta');",
											"    ",
											"    pm.response.to.not.have.jsonBody('error');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products/inventory?q[product_tags_name_cont]=tiwal%20sail",
									"protocol": "https",
									"host": [
										"1qie0vagy1",
										"execute-api",
										"eu-west-1",
										"amazonaws",
										"com"
									],
									"path": [
										"dev",
										"api",
										"v1",
										"products",
										"inventory"
									],
									"query": [
										{
											"key": "q[product_tags_name_cont]",
											"value": "tiwal%20sail"
										}
									]
								}
							},
							"response": []
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "products",
					"item": [
						{
							"name": "dev",
							"item": [
								{
									"name": "GET /api/v1/products/docs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed7a8a9f-3a96-4b5f-9442-a7dddfaf48e4",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('openapi');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products/docs",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products",
												"docs"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/:id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d3bcccc-165d-480c-9043-fb9dbf8ec781",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    ",
													"    pm.response.to.not.have.jsonBody('meta');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products/19",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products",
												"19"
											]
										},
										"description": "Find product by ID"
									},
									"response": []
								},
								{
									"name": "GET api/v1/products wih keyword",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ebd193a2-96e3-448e-9895-9c68af712605",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?tags=[\"jvt\"]",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "tags",
													"value": "[\"jvt\"]",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/groups",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b77714f8-bd1f-48ea-930e-bc63ed40f88a",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products/groups",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products",
												"groups"
											]
										},
										"description": "Get a list of all configured product groups and their id's"
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products with group id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4100a119-619c-4357-b1d2-891d59e95db3",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?q[product_group_id_eq]=19",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "q[product_group_id_eq]",
													"value": "19",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/inventory with group id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4100a119-619c-4357-b1d2-891d59e95db3",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products?q[product_group_id_eq]=19",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "q[product_group_id_eq]",
													"value": "19",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/inventory with dates & location & keyword",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "366d5527-092b-48dd-aed7-2102333daaee",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://1qie0vagy1.execute-api.eu-west-1.amazonaws.com/dev/api/v1/products/inventory?starts_at=2018-09-04&ends_at=2018-09-15&delivery_location_id=23&collection_location_id=32&q[product_tags_name_cont]=seabob",
											"protocol": "https",
											"host": [
												"1qie0vagy1",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"products",
												"inventory"
											],
											"query": [
												{
													"key": "starts_at",
													"value": "2018-09-04",
													"description": "optional yyyy-dd-mm"
												},
												{
													"key": "ends_at",
													"value": "2018-09-15",
													"description": "optional yyyy-dd-mm"
												},
												{
													"key": "delivery_location_id",
													"value": "23",
													"description": "optional "
												},
												{
													"key": "collection_location_id",
													"value": "32",
													"description": "optional"
												},
												{
													"key": "q[product_tags_name_cont]",
													"value": "seabob",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "staging",
							"item": [
								{
									"name": "GET /api/v1/products/docs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed7a8a9f-3a96-4b5f-9442-a7dddfaf48e4",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('openapi');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products/docs",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products",
												"docs"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/:id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d3bcccc-165d-480c-9043-fb9dbf8ec781",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    ",
													"    pm.response.to.not.have.jsonBody('meta');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products/19",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products",
												"19"
											]
										},
										"description": "Find product by ID"
									},
									"response": []
								},
								{
									"name": "GET api/v1/products wih keyword",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ebd193a2-96e3-448e-9895-9c68af712605",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products?tags=[\"jvt\"]",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "tags",
													"value": "[\"jvt\"]"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/groups",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b77714f8-bd1f-48ea-930e-bc63ed40f88a",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products/groups",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products",
												"groups"
											]
										},
										"description": "Get a list of all configured product groups and their id's"
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products with group id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4100a119-619c-4357-b1d2-891d59e95db3",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products?q[product_group_id_eq]=19",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "q[product_group_id_eq]",
													"value": "19",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/inventory with group id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4100a119-619c-4357-b1d2-891d59e95db3",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products?q[product_group_id_eq]=19",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "q[product_group_id_eq]",
													"value": "19",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/inventory with dates & location & keyword",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "366d5527-092b-48dd-aed7-2102333daaee",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://zu6wjlgc49.execute-api.eu-west-1.amazonaws.com/staging/api/v1/products/inventory?starts_at=2018-09-04&ends_at=2018-09-15&delivery_location_id=23&collection_location_id=32&q[product_tags_name_cont]=seabob",
											"protocol": "https",
											"host": [
												"zu6wjlgc49",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"products",
												"inventory"
											],
											"query": [
												{
													"key": "starts_at",
													"value": "2018-09-04",
													"description": "optional yyyy-dd-mm"
												},
												{
													"key": "ends_at",
													"value": "2018-09-15",
													"description": "optional yyyy-dd-mm"
												},
												{
													"key": "delivery_location_id",
													"value": "23",
													"description": "optional "
												},
												{
													"key": "collection_location_id",
													"value": "32",
													"description": "optional"
												},
												{
													"key": "q[product_tags_name_cont]",
													"value": "seabob",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "local",
							"item": [
								{
									"name": "GET /api/v1/products/docs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ed7a8a9f-3a96-4b5f-9442-a7dddfaf48e4",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('openapi');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products/docs",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products",
												"docs"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/:id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d3bcccc-165d-480c-9043-fb9dbf8ec781",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    ",
													"    pm.response.to.not.have.jsonBody('meta');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products/19",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products",
												"19"
											]
										},
										"description": "Find product by ID"
									},
									"response": []
								},
								{
									"name": "GET api/v1/products wih keyword",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "14eb1116-f7c5-495d-88b3-23c63c494dbe",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products?tags=[\"jvt\"]",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "tags",
													"value": "[\"jvt\"]"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/groups",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b77714f8-bd1f-48ea-930e-bc63ed40f88a",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products/groups",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products",
												"groups"
											]
										},
										"description": "Get a list of all configured product groups and their id's"
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products with group id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4100a119-619c-4357-b1d2-891d59e95db3",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products?q[product_group_id_eq]=19",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "q[product_group_id_eq]",
													"value": "19"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/inventory with group id",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4100a119-619c-4357-b1d2-891d59e95db3",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products?q[product_group_id_eq]=19",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products"
											],
											"query": [
												{
													"key": "q[product_group_id_eq]",
													"value": "19"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "GET /api/v1/products/inventory with dates & location & keyword",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "366d5527-092b-48dd-aed7-2102333daaee",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"    pm.response.to.have.jsonBody('meta');",
													"    ",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/products/inventory?starts_at=2018-09-04&ends_at=2018-09-15&delivery_location_id=23&collection_location_id=32&q[product_tags_name_cont]=seabob",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"products",
												"inventory"
											],
											"query": [
												{
													"key": "starts_at",
													"value": "2018-09-04",
													"description": "optional yyyy-dd-mm"
												},
												{
													"key": "ends_at",
													"value": "2018-09-15",
													"description": "optional yyyy-dd-mm"
												},
												{
													"key": "delivery_location_id",
													"value": "23",
													"description": "optional "
												},
												{
													"key": "collection_location_id",
													"value": "32",
													"description": "optional"
												},
												{
													"key": "q[product_tags_name_cont]",
													"value": "seabob",
													"description": "mandatory"
												}
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				},
				{
					"name": "locations",
					"item": [
						{
							"name": "dev",
							"item": [
								{
									"name": "Locations",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7fab3992-584f-4d7f-ac5f-eea5dbf33775",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://3rk3xtficb.execute-api.eu-west-1.amazonaws.com/dev/api/v1/locations",
											"protocol": "https",
											"host": [
												"3rk3xtficb",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"locations"
											]
										},
										"description": "page (number, optional) 1   \nThe requested page number\n\nper_page (number, optional) 20  \nThe number of records to return for the requested page\n\nfiltermode (string, optional)   all \nA built in filtermode name (e.g. active, inactive, all)\n\nq[name_or_product_group_name_or_tags_name_cont] (string, optional)  search_text_here    \nSearch on name, product group name or tags for matching records"
									},
									"response": []
								},
								{
									"name": "Get API docs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "647f4c7f-e340-4459-8f91-2517404f4499",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('openapi');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://3rk3xtficb.execute-api.eu-west-1.amazonaws.com/dev/api/v1/locations/docs",
											"protocol": "https",
											"host": [
												"3rk3xtficb",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"dev",
												"api",
												"v1",
												"locations",
												"docs"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "staging",
							"item": [
								{
									"name": "Locations",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a66d5256-ea21-4b1d-a978-ba51af059d03",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://7s2c5akwy2.execute-api.eu-west-1.amazonaws.com/staging/api/v1/locations",
											"protocol": "https",
											"host": [
												"7s2c5akwy2",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"locations"
											]
										},
										"description": "page (number, optional) 1   \nThe requested page number\n\nper_page (number, optional) 20  \nThe number of records to return for the requested page\n\nfiltermode (string, optional)   all \nA built in filtermode name (e.g. active, inactive, all)\n\nq[name_or_product_group_name_or_tags_name_cont] (string, optional)  search_text_here    \nSearch on name, product group name or tags for matching records"
									},
									"response": []
								},
								{
									"name": "Get API docs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1d0daa0d-8ac5-447c-befd-329666f85e55",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('openapi');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://7s2c5akwy2.execute-api.eu-west-1.amazonaws.com/staging/api/v1/locations/docs",
											"protocol": "https",
											"host": [
												"7s2c5akwy2",
												"execute-api",
												"eu-west-1",
												"amazonaws",
												"com"
											],
											"path": [
												"staging",
												"api",
												"v1",
												"locations",
												"docs"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						},
						{
							"name": "local",
							"item": [
								{
									"name": "Locations",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d9615f2b-c40c-479a-bae9-86af8f880caf",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('code');",
													"    pm.response.to.have.jsonBody('data');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/locations",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"locations"
											]
										},
										"description": "page (number, optional) 1   \nThe requested page number\n\nper_page (number, optional) 20  \nThe number of records to return for the requested page\n\nfiltermode (string, optional)   all \nA built in filtermode name (e.g. active, inactive, all)\n\nq[name_or_product_group_name_or_tags_name_cont] (string, optional)  search_text_here    \nSearch on name, product group name or tags for matching records"
									},
									"response": []
								},
								{
									"name": "Get API docs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "10e8d424-1665-46ca-a98b-1d1b10266440",
												"exec": [
													"pm.test(\"Status code is 200, because requested resource should exist\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Response has a json body, with a wellformed structure\", function () {",
													"    pm.response.to.have.jsonBody('openapi');",
													"    pm.response.to.not.have.jsonBody('error');",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "http://localhost:8080/api/v1/locations/docs",
											"protocol": "http",
											"host": [
												"localhost"
											],
											"port": "8080",
											"path": [
												"api",
												"v1",
												"locations",
												"docs"
											]
										}
									},
									"response": []
								}
							],
							"_postman_isSubFolder": true
						}
					],
					"_postman_isSubFolder": true
				}
			]
		}
	]
}