# For full config options, check: https://docs.serverless.com

# The provider of the cloud instance and its needed runtime configuration
provider:
  # Cloud provider
  name: aws
  # JVM
  runtime: java8
  # The S3 Bucket used for deploying the archive
  deploymentBucket: ocean-prem-test
  # The RAM size used by the function
  memorySize: 1024
  # The default timeout (30 seconds)
  timeout: 30

  # The stage to deploy, stages:(dev | test |  stage | prod) - defaults to dev
  #
  # Either deploy through gradle task:
  #
  # $ ./gradlew moduleName: deploy -Pstage=<stage_name> --stacktrace
  #
  # or directly via serverless (which is called by the `deploy` Gradle task):
  #
  # $ sls deploy --region eu-west-1 --verbose --stage <stage_name>
  #
  stage:  ${opt:stage, 'dev'}

# The service name which is used to create the stack
service:
  name: ocean-premium

# Custom variables
custom:
  apiPrefix: api
  apiVersion: v1
  # results in, for example: api/v1
  apiPathPrefix: ${self:custom.apiPrefix}/${self:custom.apiVersion}

# The default region to be deployed to
region: eu-west-1

# The path and the name of the deploy-able archive
package:
  artifact: build/libs/auth-0.0.1-SNAPSHOT-aws.jar

plugins:
  - serverless-delete-loggroups

# The functions defined by HTTP verb / path and parameters (CRUD)
functions:
  # CREATE
  create:
    # The function handler to be called for this endpoint
    handler: com.oceanpremium.api.Handler::handleRequest
    name: create-auth-${self:provider.stage}
    events:
      - http:
          # The URI of the endpoint
          path: /${self:custom.apiPathPrefix}/auth
          # The HTTP verb
          method: post
          # Additional endpoint configurations like enabling CORS
          cors: true
          # The default headers mandatory for this endpoint
          headers:
            - Content-Type
          allowCredentials: false
  # READ
  retrieve-by-id:
    # The function handler to be called for this endpoint
    handler:  com.oceanpremium.api.Handler::handleRequest
    name: retrieve-auth-by-id-${self:provider.stage}
    events:
      - http:
          # The URI of the endpoint with a placeholder for the identifier as a PATH parameter
          path: /${self:custom.apiPathPrefix}/auth/{id}
          # The HTTP verb supported by this endpoint
          method: get
          # Additional endpoint configurations like enabling CORS
          cors: true
          # The default headers mandatory for this endpoint
          headers:
            - Content-Type
          # Configure the name and the type of the PATH parameter
          request:
            parameters:
              paths:
                # this key name must match the name defined int the PATH: i.e. endpoint/{PATH_PARAMETER_ID}
                id: true
  # READ
  retrieve-all:
    # The function handler to be called for this endpoint
    handler: com.oceanpremium.api.Handler::handleRequest
    name: retrieve-all-auths-${self:provider.stage}
    events:
      - http:
          # The URI of the endpoint
          path: /${self:custom.apiPathPrefix}/auth
          # The HTTP verb supported by this endpoint
          method: get
          # Additional endpoint configurations like enabling CORS
          cors: true
          # The default headers mandatory for this endpoint
          headers:
            - Content-Type
  # UPDATE
  update-by-id:
    # The function handler to be called for this endpoint
    handler: com.oceanpremium.api.Handler::handleRequest
    name: update-auth-by-id-${self:provider.stage}
    events:
      - http:
          # The URI of the endpoint with a placeholder for the identifier as a PATH parameter
          path: /${self:custom.apiPathPrefix}/auth/{id}
          # The HTTP verb supported by this endpoint
          method: put
          # Additional endpoint configurations like enabling CORS
          cors: true
          # The default headers mandatory for this endpoint
          headers:
            - Content-Type
          # Configure the name and the type of the PATH parameter
          request:
            parameters:
              paths:
                # this key name must match the name defined int the PATH: i.e. endpoint/{PATH_PARAMETER_ID}
                id: true
  # DELETE
  delete-by-id:
    # The function handler to be called for this endpoint
    handler: com.oceanpremium.api.Handler::handleRequest
    name: delete-auth-by-id-${self:provider.stage}
    events:
      - http:
          # The URI of the endpoint with a placeholder for the identifier as a PATH parameter
          path: /${self:custom.apiPathPrefix}/auth/{id}
          # The HTTP verb supported by this endpoint
          method: delete
          # Additional endpoint configurations like enabling CORS
          cors: true
          # The default headers mandatory for this endpoint
          headers:
            - Content-Type
          # Configure the name and the type of the PATH parameter
          request:
            parameters:
              paths:
                # this key name must match the name defined int the PATH: i.e. endpoint/{PATH_PARAMETER_ID}
                id: true